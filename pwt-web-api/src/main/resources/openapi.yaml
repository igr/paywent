openapi: 3.0.3
info:
  version: 1.0.0
  title: Paywent API
  description: Payment went OK.
  contact:
    name: Igor SpasiÄ‡
    url: 'https://igo.rs'
    email: igor.spasic@gmail.com
servers:
  - url: 'http://localhost:8080/api/v1'
    description: dev
tags:
  - name: profiles
    description: Profiles
  - name: payments
    description: Payments
  - name: accounts
    description: Accounts
components:
  schemas:
    AccountType:
      type: string
      enum:
        - checking
        - savings
        - credit
      title: AccountType
    NewProfileRequest:
      type: object
      properties:
        name:
          type: string
      title: NewProfileRequest
    ProfileResponse:
      type: object
      title: ProfileResponse
      x-examples: {}
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - id
        - name
        - createdAt
    AccountResponse:
      title: AccountResponse
      type: object
      description: ''
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/AccountType'
        name:
          type: string
        number:
          type: string
        profileId:
          type: string
      required:
        - id
        - name
        - number
    NewAccountRequest:
      title: NewAccountRequest
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/AccountType'
        number:
          type: string
        profileId:
          type: string
    PaymentResponse:
      title: PaymentResponse
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        amount:
          type: string
        currency:
          type: string
        originator:
          type: string
        beneficiary:
          type: string
        sender:
          type: string
        receiver:
          type: string
    PaymentStatus:
      title: PaymentStatus
      type: string
    NewPaymentRequest:
      title: NewPaymentRequest
      type: object
      properties:
        amount:
          type: string
        currency:
          type: string
        originator:
          type: string
        beneficiary:
          type: string
        sender:
          type: string
        receiver:
          type: string
      description: New payment request.
    ProfilePortfolioResponse:
      title: ProfilePortfolioResponse
      type: object
      description: Profile with Accounts.
      properties:
        profile:
          $ref: '#/components/schemas/ProfileResponse'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
paths:
  /profiles:
    post:
      summary: Creates a new Profile.
      operationId: post-profiles
      tags:
        - profiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProfileRequest'
      responses:
        '201':
          description: Created Profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
      description: Creates a new profile.
    get:
      summary: Returns a list of Profiles.
      operationId: get-profiles
      responses:
        '200':
          description: A list of Profiles.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfileResponse'
              examples: {}
      description: List all profiles
      tags:
        - profiles
  '/profiles/{id}':
    get:
      summary: Gets a Profile by its ID.
      description: Returns a single Profile portfolio.
      operationId: get-profile-id
      tags:
        - profiles
      parameters:
        - name: id
          in: path
          required: true
          description: The Profile's ID
          schema:
            type: string
      responses:
        '200':
          description: Requested Profile.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilePortfolioResponse'
              examples: {}
    delete:
      summary: Deletes a Profile by its given ID.
      operationId: delete-profile-id
      tags:
        - profiles
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the Profile.
          schema:
            type: string
      responses:
        '204':
          description: Requested Profile is deleted and does not exist any more.
      description: Deletes a profile.
  /accounts:
    post:
      summary: Creates a new account.
      tags:
        - accounts
      operationId: post-accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccountRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
      description: Creates new account
    get:
      summary: List all accounts.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponse'
      operationId: get-accounts
      tags:
        - accounts
      description: Returns all accounts
  /payments:
    post:
      summary: Initiate a payment.
      operationId: post-payments
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
      description: Initiate a payment.
      tags:
        - payments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaymentRequest'
  '/payment/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Payment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
      operationId: get-payment-id
      tags:
        - payments
      description: 'Returns '
